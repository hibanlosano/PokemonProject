INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (1, 9, 'A highly appealing move.', 'Gives a high number of appeal points wth no other effects.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (2, 9, 'Affected by how well the appeal in front goes.', 'If the Pokémon that appealed before the user earned less than three appeal points, user earns six; if three, user earns three; if more than three, user earns none.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (3, 9, 'After this move, the user is more easily startled.', 'If the user is jammed this turn after using this move, it will receive twice as many jam points.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (4, 9, 'Badly startles the Pokémon in front.', 'Attempts to jam the Pokémon that appealed before the user.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (5, 9, 'Badly startles those that have made appeals.', 'Attempts to jam all Pokémon that have appealed this turn.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (6, 9, 'Jams the others, and misses one turn of appeals.', 'Attempts to jam the other Pokémon.  The user cannot make an appeal on the next turn, but it cannot be jammed either.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (7, 9, 'Makes a great appeal, but allows no more to the end.', 'User cannot make any more appeals for the remainder of the contest.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (8, 9, 'Startles all Pokémon that have done their appeals.', 'Attempts to jam all Pokémon that have appealed this turn.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (9, 9, 'Startles the Pokémon that appealed before the user.', 'Attempts to jam the Pokémon that appealed before the user.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (10, 9, 'Startles the Pokémon that has the judge''s attention.', 'Attempts to jam all Pokémon that have appealed this turn.  If a Pokémon is in combo standby status, it is jammed 5 points instead of 1.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (11, 9, 'The appeal works best the more the crowd is excited.', 'If the Applause meter is empty or at one, earns one point; if two, earns three points; if three, earns four points; if four, earns six points.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (12, 9, 'Works well if it''s the same type as the one before.', 'If the last Pokémon''s appeal is the same type as this move, user earns six points instead of two.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (13, 9, 'An appeal that excites the audience in any contest.', 'Always adds a point to the applause meter, regardless of whether the move matches the contest, and can likewise gain the applause bonus.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (14, 9, 'Badly startles all Pokémon that made good appeals.', 'Attempts to jam all Pokémon that have appealed this turn for half their appeal points (minimum 1).');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (15, 9, 'Can avoid being startled by others.', 'Prevents jamming for the rest of this turn.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (16, 9, 'Can avoid being startled by others once.', 'Prevents the next jam on this turn.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (17, 9, 'Can be repeatedly used without boring the judge.', 'Repeated use does not incur a penalty.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (18, 9, 'Makes all Pokémon after the user nervous.', 'Attempts to make all following Pokémon nervous (and thus unable to appeal).');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (19, 9, 'Makes the appeal as good as the one before it.', 'User earns appeal points equal to the points the previous Pokémon earned plus one.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (20, 9, 'Makes the appeal as good as those before it.', 'User earns appeal points equal to half the points ALL the previous Pokémon earned plus one.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (21, 9, 'Scrambles up the order of appeals on the next turn.', 'Shuffles the next turn''s turn order.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (22, 9, 'Shifts the judge''s attention from others.', 'Cancels combo standby status for all Pokémon that have appealed this turn.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (23, 9, 'Startles Pokémon that made a same-type appeal.', 'Attempts to jam all Pokémon that have appealed this turn.  If a Pokémon used the same type move as this one, it is jammed for 4 points instead of 1.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (24, 9, 'Temporarily stops the crowd from getting excited.', 'Prevents the Applause Meter from rising for the rest of the turn.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (25, 9, 'The appeal''s quality depends on its timing.', 'Randomly earns one, two, four, or eight points.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (26, 9, 'The appeal works better the later it is performed.', 'If user appeals first this turn, earns one point; if second, two points; if third, four points; if last, six points.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (27, 9, 'The appeal works great if performed first.', 'If user appeals first this turn, earns six points instead of two.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (28, 9, 'The appeal works great if performed last.', 'If user appeals last this turn, earns six points instead of two.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (29, 9, 'The appeal works well if the user''s condition is good.', 'If user has no stars, earns one point; if one, three points; if two, five points; if three, seven points.  This does not include the appeal point bonus the stars give.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (30, 9, 'The next appeal can be made earlier next turn.', 'User will go first next turn.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (31, 9, 'The next appeal can be made later next turn.', 'User will go last next turn.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (32, 9, 'Ups the user''s condition.  Helps prevent nervousness.', 'User gains one star.');
INSERT INTO main.contest_effect_prose (contest_effect_id, local_language_id, flavor_text, effect) VALUES (33, 9, 'Worsens the condition of those that made appeals.', 'Removes all stars from all Pokémon that have appealed this turn.');
